from telegram import ReplyKeyboardMarkup
import questions
from telegram.ext import ConversationHandler
import sys
import constants
sys.path.append("../app/")
import anti_talon_bot


chosen_sub = ""
count_run = 0

def start(bot, update):
    reply_keyboard = [[i for i in constants.storage_subject[1]]]

    update.message.reply_text(
        """–•–µ–π, {}!
        –Ø - Antitalon Botü§ñ
        –Ø –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ —É –ø—ñ–¥–≥–æ—Ç–æ–≤—Ü—ñ –¥–æ —ñ—Å–ø–∏—Ç—ñ–≤!üìù
        –£ —Ç–µ–±–µ —î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –æ–±—Ä–∞—Ç–∏ –æ–¥–∏–Ω –∑ –Ω–∞–ø—Ä—è–º—ñ–≤ - \
–Ü—Å—Ç–æ—Ä—ñ—è –∞–±–æ –î–∏—Å–∫—Ä–µ—Ç–Ω–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞‚ö°Ô∏è.
        –ü–æ–∫—Ä–∞—â—É–π —Å–≤–æ—ó —Å–∫—ñ–ª–∏ –≤ –±—É–¥—å-—è–∫–∏–π –º–æ–º–µ–Ω—Ç –∑–∞–≤–¥—è–∫–∏ —Ç–µ—Å—Ç–∞–º! \
–ê –∑–∞ –∫–æ–∂–Ω—É –ø—Ä–∞–≤–∏–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –æ—Ç—Ä–∏–º—É–π –±–∞–ª–∏ - –¥–∂–µ–¥–∂–æ—Ä–∏–∫–∏ –∞–±–æ —â–µ—Ä–±–∏–Ω—á–∏–∫–∏üí∞
         –ö—Ä—ñ–º —Ü—å–æ–≥–æ, –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞–π –∑–∞ —Å–≤–æ—ó–º –º—ñ—Å—Ü–µ–º —Ç–∞ –º—ñ—Å—Ü–µ–º \
—É—á–∞—Å–Ω–∏–∫–∞ —É Leaderboard!

        –£ —Ç–µ–±–µ —î –∫—ñ–ª—å–∫–∞ –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π:
        ‚ú®–ø—Ä–æ–ø—É—Å–∫–∞—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è,—è–∫—â–æ –Ω–µ –∑–Ω–∞—î—à –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ  (–ø—Ä–æ—Ç–µ –ø–∞–º'—è—Ç–∞–π, \
—â–æ –∑–∞ –∫–æ–∂–Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è
        —É —Ç–µ–±–µ –∑–º–µ–Ω—à–∏—Ç—å—Å—è –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±–∞–ª—ñ–≤ –Ω–∞ 10,–∞ –∑–∞ –∫–æ–∂–Ω—ñ 3 \
–ø—Ä–æ–ø—É—â–µ–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è - –Ω–∞ 50)
        ‚ú®—Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—Ç–∏ –∑–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–º

        –Ø–∫—â–æ —Ç–∏ —Ö–æ—á–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—å –±—ñ–ª—å—à–µ –ø—Ä–æ –∫–æ–º–∞–Ω–¥–∏, —Ç–æ –ø–∏—à–∏
        /help""".format(update.message.from_user.first_name),
        reply_markup=ReplyKeyboardMarkup(reply_keyboard,
                                         one_time_keyboard=True))

    return anti_talon_bot.SUBJECT


def subject(bot, update):
    global chosen_sub
    global count_run
    update.message.reply_text("–¢–∏ –≤–∏–±—Ä–∞–≤: ")
    constants.OPINION = update.message.text
    if count_run > 0:
        check_right = questions.correct_answer(constants.storage_subject[2],
                                               constants.OPINION)
    else:
        check_right = ""
    update.message.reply_text(update.message.text + check_right)
    if update.message.text.strip() == "History":
        chosen_sub = "../src/datastorage/history.json"
    elif update.message.text == "Math":
        chosen_sub = "../src/datastorage/discret.json"
    constants.gl_chosen_sub = chosen_sub

    constants.storage_subject = questions.run_question(chosen_sub)
    reply_keyboard = [[i for i in constants.storage_subject[1]]]
    update.message.reply_text(
        constants.storage_subject[0],
        reply_markup=ReplyKeyboardMarkup(reply_keyboard,
                                         one_time_keyboard=True))
    count_run += 1
    return anti_talon_bot.NEXT_QUESTION


def cancel(bot, update):
    user = update.message.from_user
    anti_talon_bot.logger.info(
        "User %s canceled the conversation.", user.first_name)
    update.message.reply_text('Bye! I hope we can talk again some day.')
    return ConversationHandler.END


def error(bot, update, error):
    """Log Errors caused by Updates."""
    anti_talon_bot.logger.warning(
        'Update "%s" caused error "%s"', update, error)


def help_me(bot, update):
    update.message.reply_text(
        """–Ø –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–æ–±—ñ –Ω–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∞–ª–æ–Ω.üòé
        –û—Å—å —Ç–æ–±—ñ –ø–µ—Ä–µ–ª—ñ–∫ –∫–æ–º–∞–Ω–¥, —è–∫—ñ —Ç–∏ –º–æ–∂–µ—à –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏:

        /start - —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –≥—Ä—É
        /help - –æ—Ç—Ä–∏–º–∞—Ç–∏ —â–µ —Ä–∞–∑ –ø—Ä–∞–≤–∏–ª–∞ —ñ –∫–æ–º–∞–Ω–¥–∏
        /invite - –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∏—Ç–∏ –¥—Ä—É–∑—ñ–≤üòâ
        /leaderboard - –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –ø–æ–±–∞—á–∏—Ç–∏ —Ä–µ–π—Ç–∏–Ω–≥ –≥—Ä–∞–≤—Ü—ñ–≤""")


def invite_friend(bot, update):
    update.message.reply_text(
        """–•–æ—á–µ—à –∑–∞–ø—Ä–æ—Å–∏—Ç–∏ –¥—Ä—É–≥–∞, {}üòè?

        –ü–æ–¥—ñ–ª–∏—Å—å —Ü–∏–º –ª—ñ–Ω–∫–æ–º –∑—ñ —Å–≤–æ—ó–º–∏ –¥—Ä—É–∑—è–º–∏üòã:
        https://t.me/AntiTalonBot
        """.format(update.message.from_user.first_name))


def stop(bot, update):
    update.message.reply_text(
        """–¢–∏ –∑—É–ø–∏–Ω–∏–≤ –≥—Ä—É((
        –û—Å—å —Ç–æ–±—ñ –ø–µ—Ä–µ–ª—ñ–∫ –∫–æ–º–∞–Ω–¥, —è–∫—ñ —Ç–∏ –º–æ–∂–µ—à –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏:

        /start - —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –≥—Ä—É
        /help - –æ—Ç—Ä–∏–º–∞—Ç–∏ —â–µ —Ä–∞–∑ –ø—Ä–∞–≤–∏–ª–∞ —ñ –∫–æ–º–∞–Ω–¥–∏
        /stop - –∑—É–ø–∏–Ω–∏—Ç–∏ –ø–æ–¥–∞—á—É –ø–∏—Ç–∞–Ω—å
        /invite - –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∏—Ç–∏ –¥—Ä—É–∑—ñ–≤üòâ
        /leaderboard - –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –ø–æ–±–∞—á–∏—Ç–∏ —Ä–µ–π—Ç–∏–Ω–≥ –≥—Ä–∞–≤—Ü—ñ–≤""")

#
# def leaderboard(bot, update):
#     update.message.reply_text(
#         "{}".format((update.message.from_user.first_name)+ " " + constants.DJEJORYKY+ " " + constants.SHCHERBYNSHI))
